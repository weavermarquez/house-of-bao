{"id":"bao-1","title":"Implement James Algebra axioms (Inversion, Arrangement, Reflection)","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:35:32.77453203-04:00","closed_at":"2025-10-30T18:35:32.77453203-04:00"}
{"id":"bao-10","title":"Extract paired boundary check in clarify logic","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.806543768-04:00","closed_at":"2025-10-29T19:13:47.397882765-04:00"}
{"id":"bao-11","title":"Clean up clarify implementation in Axioms.ts","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.81230278-04:00","closed_at":"2025-10-29T19:37:36.397029201-04:00"}
{"id":"bao-12","title":"Use terse helper names in clarify","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.818413724-04:00","closed_at":"2025-10-29T19:39:31.367478151-04:00"}
{"id":"bao-13","title":"Split axiom tests into per-axiom suites","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T13:35:12.216583405-04:00","updated_at":"2025-10-30T18:34:28.824271121-04:00","closed_at":"2025-10-30T13:38:23.235854368-04:00","dependencies":[{"issue_id":"bao-13","depends_on_id":"bao-2","type":"discovered-from","created_at":"2025-10-30T13:35:12.227579341-04:00","created_by":"kwalerie"}]}
{"id":"bao-14","title":"Enhance Clarify tests with property/property coverage","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T14:53:28.910616318-04:00","updated_at":"2025-10-30T18:34:28.833906736-04:00","closed_at":"2025-10-30T14:59:30.397285165-04:00"}
{"id":"bao-15","title":"Promote traverse helpers to Form utilities","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T15:00:49.631427558-04:00","updated_at":"2025-10-30T18:34:28.844964933-04:00","closed_at":"2025-10-30T15:02:46.887052021-04:00","dependencies":[{"issue_id":"bao-15","depends_on_id":"bao-14","type":"discovered-from","created_at":"2025-10-30T15:00:49.642270439-04:00","created_by":"kwalerie"}]}
{"id":"bao-16","title":"Improve documentation for disperse edge case and overall project docs","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-30T16:00:46.942929099-04:00","updated_at":"2025-10-30T18:34:28.855367103-04:00"}
{"id":"bao-17","title":"Build canonicalSignature-based MVP UI","description":"Create a minimal React interface that renders the current Form forest using canonicalSignature text so we can playtest without waiting on Pixi assets. Should support selecting nodes, invoking the three axioms through buttons or radial menu placeholders, and showing goal state + win feedback.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-30T18:36:18.199043408-04:00","updated_at":"2025-10-30T20:20:02.99843076-04:00","closed_at":"2025-10-30T20:20:02.99843076-04:00","dependencies":[{"issue_id":"bao-17","depends_on_id":"bao-18","type":"blocks","created_at":"2025-10-30T18:43:15.539157791-04:00","created_by":"kwalerie"},{"issue_id":"bao-17","depends_on_id":"bao-19","type":"blocks","created_at":"2025-10-30T18:43:23.799729818-04:00","created_by":"kwalerie"}]}
{"id":"bao-18","title":"Implement Zustand game state store","description":"Design the primary Zustand store to hold current form(s), selected nodes, move history, active level metadata, and UI state. Integrate the logic engine helpers so actions dispatch mutations, and expose selectors/hooks the React components can use.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T18:36:26.863878662-04:00","updated_at":"2025-10-30T20:19:23.299008264-04:00","closed_at":"2025-10-30T20:19:23.299008264-04:00"}
{"id":"bao-19","title":"Define initial level data pipeline","description":"Stand up the JSON level format described in README, seed a handful of tutorial levels, and build a loader that hydrates the Zustand store on startup. Include goal form + allowed axioms so the MVP UI can drive win checking.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T18:36:35.181456214-04:00","updated_at":"2025-10-30T20:19:33.06018589-04:00","closed_at":"2025-10-30T20:19:33.06018589-04:00","dependencies":[{"issue_id":"bao-19","depends_on_id":"bao-18","type":"blocks","created_at":"2025-10-30T18:42:53.347149402-04:00","created_by":"kwalerie"},{"issue_id":"bao-19","depends_on_id":"bao-3","type":"blocks","created_at":"2025-10-30T18:43:05.268764355-04:00","created_by":"kwalerie"}]}
{"id":"bao-2","title":"Write unit tests for axiom operations","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.864889004-04:00","closed_at":"2025-10-30T12:45:23.239921812-04:00"}
{"id":"bao-20","title":"Design radial action menu interactions","description":"Prototype the Fly-Pie inspired radial menu for selecting axioms: tap/hold to open, show context-sensitive options, handle touch + mouse, and integrate with the Zustand store's selected node state.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-30T18:36:43.606955409-04:00","updated_at":"2025-10-30T18:36:43.606955409-04:00","dependencies":[{"issue_id":"bao-20","depends_on_id":"bao-17","type":"blocks","created_at":"2025-10-30T18:43:31.600258626-04:00","created_by":"kwalerie"}]}
{"id":"bao-21","title":"Prototype bounding box dialect renderer","description":"Swap out the network dialect visuals for a bounding box / bucket dialect in PixiJS so forms read like 2D shapes. Build a scene graph abstraction layer we can reuse when we add art assets.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-30T18:36:51.48667324-04:00","updated_at":"2025-10-30T18:36:51.48667324-04:00","dependencies":[{"issue_id":"bao-21","depends_on_id":"bao-18","type":"blocks","created_at":"2025-10-30T18:43:40.199671745-04:00","created_by":"kwalerie"}]}
{"id":"bao-22","title":"Set up animation pipeline with GSAP","description":"Integrate GSAP timelines for axiom animations (inversion, arrangement, reflection) plus selection feedback. Establish easing presets and hooks so state transitions trigger the correct animations.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-30T18:38:12.802673478-04:00","updated_at":"2025-10-30T18:38:12.802673478-04:00","dependencies":[{"issue_id":"bao-22","depends_on_id":"bao-21","type":"blocks","created_at":"2025-10-30T18:43:49.483094628-04:00","created_by":"kwalerie"}]}
{"id":"bao-23","title":"Verify gameStore gameOperations match axiom behaviours","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T23:39:57.287944592-04:00","updated_at":"2025-10-30T23:43:40.018279247-04:00","closed_at":"2025-10-30T23:43:40.018279247-04:00"}
{"id":"bao-24","title":"Add gameStore tests for axiom guard enforcement","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-31T00:00:19.988628298-04:00","updated_at":"2025-10-31T00:00:19.988628298-04:00","dependencies":[{"issue_id":"bao-24","depends_on_id":"bao-23","type":"discovered-from","created_at":"2025-10-31T00:00:20.006782525-04:00","created_by":"kwalerie"}]}
{"id":"bao-25","title":"Cover arrangement edge cases in gameStore tests","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-31T00:00:28.587349041-04:00","updated_at":"2025-10-31T00:00:28.587349041-04:00","dependencies":[{"issue_id":"bao-25","depends_on_id":"bao-23","type":"discovered-from","created_at":"2025-10-31T00:00:28.607692764-04:00","created_by":"kwalerie"}]}
{"id":"bao-26","title":"Cover reflection edge cases in gameStore tests","description":"","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-31T00:00:37.363329076-04:00","updated_at":"2025-10-31T00:00:37.363329076-04:00","dependencies":[{"issue_id":"bao-26","depends_on_id":"bao-23","type":"discovered-from","created_at":"2025-10-31T00:00:37.379794415-04:00","created_by":"kwalerie"}]}
{"id":"bao-27","title":"Explore property-based testing for gameStore operations","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-31T00:00:45.899790563-04:00","updated_at":"2025-10-31T00:00:45.899790563-04:00","dependencies":[{"issue_id":"bao-27","depends_on_id":"bao-23","type":"discovered-from","created_at":"2025-10-31T00:00:45.915475889-04:00","created_by":"kwalerie"}]}
{"id":"bao-3","title":"Implement win condition checker","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T20:20:23.909336267-04:00","closed_at":"2025-10-30T20:20:23.909336267-04:00"}
{"id":"bao-4","title":"Implement undo/redo system","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T20:20:33.970432839-04:00","closed_at":"2025-10-30T20:20:33.970432839-04:00","dependencies":[{"issue_id":"bao-4","depends_on_id":"bao-18","type":"blocks","created_at":"2025-10-30T18:42:44.67334225-04:00","created_by":"kwalerie"}]}
{"id":"bao-5","title":"Preserve variable ids during clone","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.889996213-04:00","closed_at":"2025-10-29T19:58:02.700928242-04:00"}
{"id":"bao-6","title":"Provide two enfold variants","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.897776833-04:00","closed_at":"2025-10-29T20:11:22.253211147-04:00"}
{"id":"bao-7","title":"Set up Vite + React + TypeScript project","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.904872901-04:00","closed_at":"2025-10-29T18:05:03.530594707-04:00"}
{"id":"bao-8","title":"Implement form data structures","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.911516939-04:00","closed_at":"2025-10-29T18:12:07.746487008-04:00"}
{"id":"bao-9","title":"Refactor Clarify applicability condition in Axioms.ts","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-30T12:20:46.084814482-04:00","updated_at":"2025-10-30T18:34:28.919128757-04:00","closed_at":"2025-10-29T19:10:32.651345147-04:00"}
